# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
  pull_request:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macos-latest,     r: 'release'  }
          - { os: macos-15,         r: 'next'     }
          - { os: windows-latest,   r: 'release'  }
          - { os: windows-latest,   r: 'devel'    }
          - { os: ubuntu-latest,    r: 'devel', http-user-agent: 'release' }
          - { os: ubuntu-latest,    r: 'release'  }
          - { os: ubuntu-latest,    r: 'oldrel-1' }
          - { os: ubuntu-24.04-arm, r: 'release'  }
          - { os: windows-11-arm,   r: 'release'  }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Add more rust targets
        if: ${{ runner.os == 'windows' && runner.arch == 'X64' }}
        run: rustup target add x86_64-pc-windows-gnu
      
      - name: Install Rust on Arm Windows
        if: ${{ runner.os == 'windows' && runner.arch == 'ARM64' }}
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > tmp.sh
          sh ./tmp.sh -y --profile minimal --target aarch64-pc-windows-gnullvm
          echo ${HOME}/.cargo/bin >> $GITHUB_PATH
        shell: bash

      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        # TODO: skip installation on Windows Arm64 and use the default installation
        if: ${{ !(runner.os == 'windows' && runner.arch == 'ARM64') }}
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        if: ${{ !(runner.os == 'windows' && runner.arch == 'ARM64') }}
        with:
          extra-packages: any::rcmdcheck
          needs: check

        # TODO: it seems pak doesn't support Windows Arm64
      - name: Install
        if: ${{ runner.os == 'windows' && runner.arch == 'ARM64' }}
        run: Rscript -e 'install.packages("rcmdcheck", repos="https://cloud.r-project.org")'

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
        env:
          MAKEFLAGS: -j4
